Index: oTree_exp/incomeuncertainty_marathi/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from otree.api import (\r\n    models,\r\n    widgets,\r\n    BaseConstants,\r\n    BaseSubsession,\r\n    BaseGroup,\r\n    BasePlayer,\r\n    Currency as c,\r\n    currency_range,\r\n)\r\n\r\nfrom django import forms\r\n\r\nauthor = 'Your name here'\r\n\r\ndoc = \"\"\"\r\nYour app description\r\n\"\"\"\r\n\r\n\r\nclass Constants(BaseConstants):\r\n    name_in_url = 'SES_marathi'\r\n    players_per_group = None\r\n    num_rounds = 1\r\n\r\n\r\nclass Subsession(BaseSubsession):\r\n    pass\r\n\r\n\r\nclass Group(BaseGroup):\r\n    pass\r\n\r\n\r\nyesNoChoice = [\r\n    [True, 'होय'],\r\n    [False, 'नाही'],\r\n]\r\n\r\nclass Player(BasePlayer):\r\n    howmanypeople=models.IntegerField(label=\"आपल्या कुटुंबातील किती लोक आहेत?\",\r\n                                      min=1,\r\n                                      max=10,\r\n                                      )\r\n    howmanydependent=models.IntegerField(label=\"किती आर्थिकदृष्ट्या अवलंबून (मुलांसह)?\",\r\n                                         min=1,\r\n                                         max=10,\r\n                                         )\r\n    wenttoworktoday=models.IntegerField(label=\"आज तुमच्या घरात किती लोक कामावर गेले आहेत?\",\r\n                                        min=1,\r\n                                        max=10,\r\n                                        )\r\n    wenttoworkbeforelockdown=models.IntegerField(label=\"लॉकडाउनपूर्वी तुमच्या घरात किती लोक कामावर जायचे?\",\r\n                                                 min=1,\r\n                                                 max=10,\r\n                                                 )\r\n    tempwork = models.IntegerField(label=\"तुमच्या कुटुंबातील कोणतेही सदस्य सध्या तात्पुरते किंवा हंगामी नोकरी करतात का?\",\r\n                                   choices=yesNoChoice)\r\n    areyouemployed=models.IntegerField(label=\"तुम्ही सध्या व्यवसाय किंवा नोकरी करत आहात का?\",\r\n                                       choices=yesNoChoice)\r\n    howmanymonthsago=models.IntegerField(label=\"जर व्यवसाय किंवा नोकरी नाही, तर, किती महिन्यांपूर्वी आपण व्यवसाय किंवा नोकरी गमावली?\",\r\n                                         choices=[\r\n                                             [1,\"1-3\"],\r\n                                             [2,\"4-6\"],\r\n                                             [3,\"7-9\"],\r\n                                             [4,\"9-12\"],\r\n                                             [5,\"12+\"],\r\n                                             [6, \"अजूनही व्यवसाय किंवा नोकरी आहे\"],\r\n                                             [7, \"व्यवसाय किंवा नोकरी कधीच नव्हती\"]\r\n                                         ])\r\n    directlylostjob=models.IntegerField(label=\"तुम्ही तुमची नोकरी थेट गमावली की तुम्हाला आधी निम्मा पगार मिळाला, मग शेवटी सोडण्यात आले?\",\r\n                                        choices=[\r\n                                            [1,\"थेट गमावली\"],\r\n                                            [2,\"आधी मला अर्धा पगार मिळाला, मग नोकरी गमावली\"],\r\n                                            [3,\"अजूनही व्यवसाय किंवा नोकरी आहे\"],\r\n                                            [4,\"व्यवसाय किंवा नोकरी कधीच नव्हती\"]\r\n                                        ])\r\n    fullorpartial=models.IntegerField(label=\"आपला व्यवसाय किंवा नोकरी अस्ल्यास, आपण पूर्ण उत्पन्न किंवा पगार का आंशिक पगार घेत आहात?\",\r\n                                      choices=[\r\n                                          [1,\"पूर्ण उत्पन्न किंवा पगार\"],\r\n                                          [2,\"आंशिक उत्पन्न किंवा पगार\"],\r\n                                          [3, \"व्यवसाय किंवा नोकरी नाही आहे\"],\r\n                                          [4,\"व्यवसाय किंवा नोकरी कधीच नव्हती\"]\r\n                                      ])\r\n    ifpartial=models.IntegerField(label=\"आंशिक असल्यास, आपण किती उत्पन्न किंवा पगार प्राप्त करीत आहात?\",\r\n                                  choices=[\r\n                                      [1,\"अर्ध्यापेक्षा जास्त\"],\r\n                                      [2,\"अर्धा\"],\r\n                                      [3, \"अर्ध्यापेक्षा कमी\"],\r\n                                      [4, \"पूर्ण उत्पन्न किंवा पगार मिळत आहे\"],\r\n                                      [5, \"व्यवसाय किंवा नोकरी नाही आहे\"],\r\n                                      [6, \"व्यवसाय किंवा नोकरी कधीच नव्हती\"]\r\n                                  ])\r\n    otheremployed=models.IntegerField(label=\"सध्या कुटूंबातील इतर एखादा सदस्य व्यवसाय किंवा नोकरी करतो का?\",\r\n                                      choices=yesNoChoice)\r\n    otherfullorpartial=models.IntegerField(label=\"जर हो, तर त्यांना पूर्ण उत्पन्न किंवा पगार मिळतो की अंशतः?\",\r\n                                           choices=[\r\n                                          [1,\"पूर्ण उत्पन्न किंवा पगार\"],\r\n                                          [2,\"आंशिक उत्पन्न किंवा पगार\"],\r\n                                          [3, \"व्यवसाय किंवा नोकरी नाही आहे\"],\r\n                                          [4,\"व्यवसाय किंवा नोकरी कधीच नव्हती\"]\r\n                                      ]))\r\n    otherifpartial=models.IntegerField(label=\"आंशिक असल्यास, ते किती प्राप्त करीत आहेत?\",\r\n                                  choices=[\r\n                                      [1,\"अर्ध्यापेक्षा जास्त\"],\r\n                                      [2,\"अर्धा\"],\r\n                                      [3, \"अर्ध्यापेक्षा कमी\"],\r\n                                      [4, \"पूर्ण उत्पन्न किंवा पगार मिळत आहे\"],\r\n                                      [5, \"व्यवसाय किंवा नोकरी नाही आहे\"],\r\n                                      [6, \"व्यवसाय किंवा नोकरी कधीच नव्हती\"]\r\n                                  ])\r\n    incomebeforelockdown=models.IntegerField(label=\"लॉकडाउनअधी कुटुंबातील एकूण उत्पन्न किती होते?\", choices=[\r\n        [1,\"5000 किंवा कमी\"],\r\n        [2,\"5000 - 7500\"],\r\n        [3,\"7500 - 10,000\"],\r\n        [4,\"10,000 - 12,500\"],\r\n        [5,\"12,500 - 15,000\"],\r\n        [6,\"15,000 - 20,000\"],\r\n        [7,\"20,000 - 25,000\"],\r\n        [8,\"25,000 किंवा जास्त\"]\r\n    ])\r\n    incometoday=models.IntegerField(label=\"आज कौटुंबिक उत्पन्न किती आहे?\", choices=[\r\n        [1,\"5000 किंवा कमी\"],\r\n        [2,\"5000 - 7500\"],\r\n        [3,\"7500 - 10,000\"],\r\n        [4,\"10,000 - 12,500\"],\r\n        [5,\"12,500 - 15,000\"],\r\n        [6,\"15,000 - 20,000\"],\r\n        [7,\"20,000 - 25,000\"],\r\n        [8,\"25,000 किंवा जास्त\"]\r\n    ])\r\n    jobsecureorfinding=models.IntegerField(label=\"तुम्हाला वाटते की तुमची नोकरी सुरक्षित आहे किंवा पुढील तीन महिन्यांत तुम्हाला नोकरी मिळेल?\",choices=[[1,\"हो\"],[2,\"नाही\"],[3,\"कदाचित\"]])\r\n    lesssalary=models.IntegerField(label=\"आपल्याला असे वाटते का कि, जर नोकरी मिळाली, तर जो पगार पुढील तीन महिन्यात मिळेल तो पूर्वीपेक्षा कमी मिळेल?\",choices=[[1,\"हो\"],[2,\"नाही\"],[3,\"कदाचित\"]])\r\n    otherjobssecureorfinding=models.IntegerField(label=\"आपणास असे वाटते की आपल्या कुटुंबातील सदस्याची व्यवसाय किंवा नोकरी सुरक्षित आहे किंवा पुढील तीन महिन्यांत त्यांना व्यवसाय किंवा नोकरी मिळेल?\",choices=[[1,\"हो\"],[2,\"नाही\"],[3,\"कदाचित\"]])\r\n    otherlesssalary=models.IntegerField(label=\"तुम्हाला वाटत आहे की येत्या तीन महिन्यांत त्यांना मिळणार्या उत्पन्न किंवा पगारापेक्षा कमी पगार मिळेल?\",choices=[[1,\"हो\"],[2,\"नाही\"],[3,\"कदाचित\"]])\r\n    losejob3months=models.IntegerField(label=\"जर आपण तीन महिन्यात व्यवसाय किंवा नोकरी गमावल्यास, किंवा पुढील तीन महिन्यांत व्यवसाय किंवा नोकरी न मिळाल्यास, आपण आपल्या कुटुंबाची कशी पूर्तता कराल?\",\r\n    choices=[\r\n        [1, \"बचत केलेले पैसे मी वापरेन\"],\r\n        [2, \"गुंतवलेली रक्कम मी वापरेन\"],\r\n        [3, \"मी कर्ज घेईन\"],\r\n        [4, \"मी घरातील काहीतरी विकेन (सोने, चांदी..)\"],\r\n        [5, \"मी माझ्या गावी परत जाईन\"],\r\n    ])\r\n    otherskill=models.IntegerField(label=\"आपल्याकडे वेगळी नोकरी शोधण्यासाठी आणखी एक कौशल्य आहे?\", choices=yesNoChoice)\r\n    whatotherjob=models.IntegerField(label=\"आपण कोणती दुसरी नोकरी शोधाल?\",\r\nchoices=[\r\n    [1,\"बांधकाम चे काम\"],\r\n    [2, \"शिपाई ची नोकरी\"],\r\n    [3, \"डिलिव्हरी\"],\r\n    [4, \"शेतीचे काम\"],\r\n    [5, \"रोजंदारीचे काम\"],\r\n    [6, \"कारकुनी काम\"],\r\n    [7, \"इतर\"]\r\n])\r\n    willyougetone=models.IntegerField(label=\"तुम्हाला वाटते की तुम्हाला दुसरी नोकरी मिळेल?\",choices=yesNoChoice)\r\n    otherjobsalary=models.IntegerField(label=\"इतर नोकरीत पगार म्हणजे काय असे तुम्हाला वाटते?\", choices=[\r\n        [1, \"मी आता जितके मिळवितो तितकेच\"],\r\n        [2, \"मी आता जे मिळवितो त्यापेक्षा कमी\"],\r\n        [3, \"मी आता मिळवण्यापेक्षा अधिक\"]\r\n    ])\r\n    standardofliving=models.IntegerField(label=\"आपल्याला असे वाटते की एक विशिष्ट जीवनमान टिकवून ठेवण्यासाठी तो पगार समाधानकारक असेल?\",choices=yesNoChoice)\r\n    twojobs=models.IntegerField(label=\"आपल्याला असे वाटते की जीवनमान टिकविण्यासाठी आपल्याला दोन नोकर्या घ्याव्या लागतील?\",choices=yesNoChoice)\r\n    competitiontofind=models.IntegerField(label=\"आपणास असे वाटते की दोन नोकर्\u200Dया शोधण्यात आपल्यात खूप स्पर्धा आहे?\", choices=yesNoChoice)\r\n    physicallywell=models.IntegerField(label=\"आपल्याला असे वाटते की आपण दोन नोकरीसाठी शारीरिकदृष्ट्या चांगले आहात?\", choices=yesNoChoice)\r\n    covidhealth=models.IntegerField(label=\"आपण चिंता करतात का आपणास कोविड झाल्यास, आपल्या दीर्घकालीन आरोग्यावर परिणाम होईल आणि यामुळे कायमचे काम करण्याची शारीरिक क्षमतेवर परिणाम होईल?\",choices=yesNoChoice)\r\n    optimistic=models.IntegerField(label=\"0-3 च्या प्रमाणात, आपण आपल्या भविष्याबद्दल किती आशावादी आहात?\",choices=[\r\n        [1,\"0\"],\r\n        [2, \"1\"],\r\n        [3, \"2\"],\r\n        [4, \"3\"]\r\n    ])
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- oTree_exp/incomeuncertainty_marathi/models.py	(revision 068291db5174be924ff1e6f8d18612373afd45e0)
+++ oTree_exp/incomeuncertainty_marathi/models.py	(date 1603025006953)
@@ -37,135 +37,155 @@
     [False, 'नाही'],
 ]
 
+
 class Player(BasePlayer):
-    howmanypeople=models.IntegerField(label="आपल्या कुटुंबातील किती लोक आहेत?",
-                                      min=1,
-                                      max=10,
-                                      )
-    howmanydependent=models.IntegerField(label="किती आर्थिकदृष्ट्या अवलंबून (मुलांसह)?",
-                                         min=1,
-                                         max=10,
-                                         )
-    wenttoworktoday=models.IntegerField(label="आज तुमच्या घरात किती लोक कामावर गेले आहेत?",
-                                        min=1,
-                                        max=10,
-                                        )
-    wenttoworkbeforelockdown=models.IntegerField(label="लॉकडाउनपूर्वी तुमच्या घरात किती लोक कामावर जायचे?",
-                                                 min=1,
-                                                 max=10,
-                                                 )
-    tempwork = models.IntegerField(label="तुमच्या कुटुंबातील कोणतेही सदस्य सध्या तात्पुरते किंवा हंगामी नोकरी करतात का?",
-                                   choices=yesNoChoice)
-    areyouemployed=models.IntegerField(label="तुम्ही सध्या व्यवसाय किंवा नोकरी करत आहात का?",
-                                       choices=yesNoChoice)
-    howmanymonthsago=models.IntegerField(label="जर व्यवसाय किंवा नोकरी नाही, तर, किती महिन्यांपूर्वी आपण व्यवसाय किंवा नोकरी गमावली?",
-                                         choices=[
-                                             [1,"1-3"],
-                                             [2,"4-6"],
-                                             [3,"7-9"],
-                                             [4,"9-12"],
-                                             [5,"12+"],
-                                             [6, "अजूनही व्यवसाय किंवा नोकरी आहे"],
-                                             [7, "व्यवसाय किंवा नोकरी कधीच नव्हती"]
-                                         ])
-    directlylostjob=models.IntegerField(label="तुम्ही तुमची नोकरी थेट गमावली की तुम्हाला आधी निम्मा पगार मिळाला, मग शेवटी सोडण्यात आले?",
-                                        choices=[
-                                            [1,"थेट गमावली"],
-                                            [2,"आधी मला अर्धा पगार मिळाला, मग नोकरी गमावली"],
-                                            [3,"अजूनही व्यवसाय किंवा नोकरी आहे"],
-                                            [4,"व्यवसाय किंवा नोकरी कधीच नव्हती"]
-                                        ])
-    fullorpartial=models.IntegerField(label="आपला व्यवसाय किंवा नोकरी अस्ल्यास, आपण पूर्ण उत्पन्न किंवा पगार का आंशिक पगार घेत आहात?",
-                                      choices=[
-                                          [1,"पूर्ण उत्पन्न किंवा पगार"],
-                                          [2,"आंशिक उत्पन्न किंवा पगार"],
-                                          [3, "व्यवसाय किंवा नोकरी नाही आहे"],
-                                          [4,"व्यवसाय किंवा नोकरी कधीच नव्हती"]
-                                      ])
-    ifpartial=models.IntegerField(label="आंशिक असल्यास, आपण किती उत्पन्न किंवा पगार प्राप्त करीत आहात?",
-                                  choices=[
-                                      [1,"अर्ध्यापेक्षा जास्त"],
-                                      [2,"अर्धा"],
-                                      [3, "अर्ध्यापेक्षा कमी"],
-                                      [4, "पूर्ण उत्पन्न किंवा पगार मिळत आहे"],
-                                      [5, "व्यवसाय किंवा नोकरी नाही आहे"],
-                                      [6, "व्यवसाय किंवा नोकरी कधीच नव्हती"]
-                                  ])
-    otheremployed=models.IntegerField(label="सध्या कुटूंबातील इतर एखादा सदस्य व्यवसाय किंवा नोकरी करतो का?",
-                                      choices=yesNoChoice)
-    otherfullorpartial=models.IntegerField(label="जर हो, तर त्यांना पूर्ण उत्पन्न किंवा पगार मिळतो की अंशतः?",
-                                           choices=[
-                                          [1,"पूर्ण उत्पन्न किंवा पगार"],
-                                          [2,"आंशिक उत्पन्न किंवा पगार"],
-                                          [3, "व्यवसाय किंवा नोकरी नाही आहे"],
-                                          [4,"व्यवसाय किंवा नोकरी कधीच नव्हती"]
-                                      ]))
-    otherifpartial=models.IntegerField(label="आंशिक असल्यास, ते किती प्राप्त करीत आहेत?",
-                                  choices=[
-                                      [1,"अर्ध्यापेक्षा जास्त"],
-                                      [2,"अर्धा"],
-                                      [3, "अर्ध्यापेक्षा कमी"],
-                                      [4, "पूर्ण उत्पन्न किंवा पगार मिळत आहे"],
-                                      [5, "व्यवसाय किंवा नोकरी नाही आहे"],
-                                      [6, "व्यवसाय किंवा नोकरी कधीच नव्हती"]
-                                  ])
-    incomebeforelockdown=models.IntegerField(label="लॉकडाउनअधी कुटुंबातील एकूण उत्पन्न किती होते?", choices=[
-        [1,"5000 किंवा कमी"],
-        [2,"5000 - 7500"],
-        [3,"7500 - 10,000"],
-        [4,"10,000 - 12,500"],
-        [5,"12,500 - 15,000"],
-        [6,"15,000 - 20,000"],
-        [7,"20,000 - 25,000"],
-        [8,"25,000 किंवा जास्त"]
+    howmanypeople = models.IntegerField(label="आपल्या कुटुंबातील किती लोक आहेत?",
+                                        min=1,
+                                        max=10,
+                                        )
+    howmanydependent = models.IntegerField(label="किती आर्थिकदृष्ट्या अवलंबून (मुलांसह)?",
+                                           min=1,
+                                           max=10,
+                                           )
+    wenttoworktoday = models.IntegerField(label="आज तुमच्या घरात किती लोक कामावर गेले आहेत?",
+                                          min=1,
+                                          max=10,
+                                          )
+    wenttoworkbeforelockdown = models.IntegerField(label="लॉकडाउनपूर्वी तुमच्या घरात किती लोक कामावर जायचे?",
+                                                   min=1,
+                                                   max=10,
+                                                   )
+    tempwork = models.BooleanField(
+        label="तुमच्या कुटुंबातील कोणतेही सदस्य सध्या तात्पुरते किंवा हंगामी नोकरी करतात का?",
+        choices=yesNoChoice)
+    areyouemployed = models.BooleanField(label="तुम्ही सध्या व्यवसाय किंवा नोकरी करत आहात का?",
+                                         choices=yesNoChoice)
+    howmanymonthsago = models.IntegerField(
+        label="जर व्यवसाय किंवा नोकरी नाही, तर, किती महिन्यांपूर्वी आपण व्यवसाय किंवा नोकरी गमावली?",
+        choices=[
+            [1, "1-3"],
+            [2, "4-6"],
+            [3, "7-9"],
+            [4, "9-12"],
+            [5, "12+"],
+            [6, "अजूनही व्यवसाय किंवा नोकरी आहे"],
+            [7, "व्यवसाय किंवा नोकरी कधीच नव्हती"]
+        ])
+    directlylostjob = models.IntegerField(
+        label="तुम्ही तुमची नोकरी थेट गमावली की तुम्हाला आधी निम्मा पगार मिळाला, मग शेवटी सोडण्यात आले?",
+        choices=[
+            [1, "थेट गमावली"],
+            [2, "आधी मला अर्धा पगार मिळाला, मग नोकरी गमावली"],
+            [3, "अजूनही व्यवसाय किंवा नोकरी आहे"],
+            [4, "व्यवसाय किंवा नोकरी कधीच नव्हती"]
+        ])
+    fullorpartial = models.IntegerField(
+        label="आपला व्यवसाय किंवा नोकरी अस्ल्यास, आपण पूर्ण उत्पन्न किंवा पगार का आंशिक पगार घेत आहात?",
+        choices=[
+            [1, "पूर्ण उत्पन्न किंवा पगार"],
+            [2, "आंशिक उत्पन्न किंवा पगार"],
+            [3, "व्यवसाय किंवा नोकरी नाही आहे"],
+            [4, "व्यवसाय किंवा नोकरी कधीच नव्हती"]
+        ])
+    ifpartial = models.IntegerField(label="आंशिक असल्यास, आपण किती उत्पन्न किंवा पगार प्राप्त करीत आहात?",
+                                    choices=[
+                                        [1, "अर्ध्यापेक्षा जास्त"],
+                                        [2, "अर्धा"],
+                                        [3, "अर्ध्यापेक्षा कमी"],
+                                        [4, "पूर्ण उत्पन्न किंवा पगार मिळत आहे"],
+                                        [5, "व्यवसाय किंवा नोकरी नाही आहे"],
+                                        [6, "व्यवसाय किंवा नोकरी कधीच नव्हती"]
+                                    ])
+    otheremployed = models.BooleanField(label="सध्या कुटूंबातील इतर एखादा सदस्य व्यवसाय किंवा नोकरी करतो का?",
+                                        choices=yesNoChoice)
+    otherfullorpartial = models.IntegerField(label="जर हो, तर त्यांना पूर्ण उत्पन्न किंवा पगार मिळतो की अंशतः?",
+                                             choices=[
+                                                 [1, "पूर्ण उत्पन्न किंवा पगार"],
+                                                 [2, "आंशिक उत्पन्न किंवा पगार"],
+                                                 [3, "व्यवसाय किंवा नोकरी नाही आहे"],
+                                                 [4, "व्यवसाय किंवा नोकरी कधीच नव्हती"]
+                                             ])
+    otherifpartial = models.IntegerField(label="आंशिक असल्यास, ते किती प्राप्त करीत आहेत?",
+                                         choices=[
+                                             [1, "अर्ध्यापेक्षा जास्त"],
+                                             [2, "अर्धा"],
+                                             [3, "अर्ध्यापेक्षा कमी"],
+                                             [4, "पूर्ण उत्पन्न किंवा पगार मिळत आहे"],
+                                             [5, "व्यवसाय किंवा नोकरी नाही आहे"],
+                                             [6, "व्यवसाय किंवा नोकरी कधीच नव्हती"]
+                                         ])
+    incomebeforelockdown = models.IntegerField(label="लॉकडाउनअधी कुटुंबातील एकूण उत्पन्न किती होते?", choices=[
+        [1, "5000 किंवा कमी"],
+        [2, "5000 - 7500"],
+        [3, "7500 - 10,000"],
+        [4, "10,000 - 12,500"],
+        [5, "12,500 - 15,000"],
+        [6, "15,000 - 20,000"],
+        [7, "20,000 - 25,000"],
+        [8, "25,000 किंवा जास्त"]
     ])
-    incometoday=models.IntegerField(label="आज कौटुंबिक उत्पन्न किती आहे?", choices=[
-        [1,"5000 किंवा कमी"],
-        [2,"5000 - 7500"],
-        [3,"7500 - 10,000"],
-        [4,"10,000 - 12,500"],
-        [5,"12,500 - 15,000"],
-        [6,"15,000 - 20,000"],
-        [7,"20,000 - 25,000"],
-        [8,"25,000 किंवा जास्त"]
+    incometoday = models.IntegerField(label="आज कौटुंबिक उत्पन्न किती आहे?", choices=[
+        [1, "5000 किंवा कमी"],
+        [2, "5000 - 7500"],
+        [3, "7500 - 10,000"],
+        [4, "10,000 - 12,500"],
+        [5, "12,500 - 15,000"],
+        [6, "15,000 - 20,000"],
+        [7, "20,000 - 25,000"],
+        [8, "25,000 किंवा जास्त"]
     ])
-    jobsecureorfinding=models.IntegerField(label="तुम्हाला वाटते की तुमची नोकरी सुरक्षित आहे किंवा पुढील तीन महिन्यांत तुम्हाला नोकरी मिळेल?",choices=[[1,"हो"],[2,"नाही"],[3,"कदाचित"]])
-    lesssalary=models.IntegerField(label="आपल्याला असे वाटते का कि, जर नोकरी मिळाली, तर जो पगार पुढील तीन महिन्यात मिळेल तो पूर्वीपेक्षा कमी मिळेल?",choices=[[1,"हो"],[2,"नाही"],[3,"कदाचित"]])
-    otherjobssecureorfinding=models.IntegerField(label="आपणास असे वाटते की आपल्या कुटुंबातील सदस्याची व्यवसाय किंवा नोकरी सुरक्षित आहे किंवा पुढील तीन महिन्यांत त्यांना व्यवसाय किंवा नोकरी मिळेल?",choices=[[1,"हो"],[2,"नाही"],[3,"कदाचित"]])
-    otherlesssalary=models.IntegerField(label="तुम्हाला वाटत आहे की येत्या तीन महिन्यांत त्यांना मिळणार्या उत्पन्न किंवा पगारापेक्षा कमी पगार मिळेल?",choices=[[1,"हो"],[2,"नाही"],[3,"कदाचित"]])
-    losejob3months=models.IntegerField(label="जर आपण तीन महिन्यात व्यवसाय किंवा नोकरी गमावल्यास, किंवा पुढील तीन महिन्यांत व्यवसाय किंवा नोकरी न मिळाल्यास, आपण आपल्या कुटुंबाची कशी पूर्तता कराल?",
-    choices=[
-        [1, "बचत केलेले पैसे मी वापरेन"],
-        [2, "गुंतवलेली रक्कम मी वापरेन"],
-        [3, "मी कर्ज घेईन"],
-        [4, "मी घरातील काहीतरी विकेन (सोने, चांदी..)"],
-        [5, "मी माझ्या गावी परत जाईन"],
-    ])
-    otherskill=models.IntegerField(label="आपल्याकडे वेगळी नोकरी शोधण्यासाठी आणखी एक कौशल्य आहे?", choices=yesNoChoice)
-    whatotherjob=models.IntegerField(label="आपण कोणती दुसरी नोकरी शोधाल?",
-choices=[
-    [1,"बांधकाम चे काम"],
-    [2, "शिपाई ची नोकरी"],
-    [3, "डिलिव्हरी"],
-    [4, "शेतीचे काम"],
-    [5, "रोजंदारीचे काम"],
-    [6, "कारकुनी काम"],
-    [7, "इतर"]
-])
-    willyougetone=models.IntegerField(label="तुम्हाला वाटते की तुम्हाला दुसरी नोकरी मिळेल?",choices=yesNoChoice)
-    otherjobsalary=models.IntegerField(label="इतर नोकरीत पगार म्हणजे काय असे तुम्हाला वाटते?", choices=[
+    jobsecureorfinding = models.IntegerField(label="तुम्हाला वाटते की तुमची नोकरी सुरक्षित आहे किंवा पुढील तीन "
+                                                   "महिन्यांत तुम्हाला नोकरी मिळेल?",
+                                             choices=[[1, "हो"], [2, "नाही"], [3,
+                                                                               "कदाचित"]])
+    lesssalary = models.IntegerField(label="आपल्याला असे वाटते का कि, जर नोकरी मिळाली, तर जो पगार पुढील तीन महिन्यात "
+                                           "मिळेल तो पूर्वीपेक्षा कमी मिळेल?",
+                                     choices=[[1, "हो"], [2, "नाही"], [3, "कदाचित"]])
+    otherjobssecureorfinding = models.IntegerField(label="आपणास असे वाटते की आपल्या कुटुंबातील सदस्याची व्यवसाय किंवा "
+                                                         "नोकरी सुरक्षित आहे किंवा पुढील तीन महिन्यांत त्यांना व्यवसाय "
+                                                         "किंवा नोकरी मिळेल?",
+                                                   choices=[[1, "हो"], [2, "नाही"], [3, "कदाचित"]])
+    otherlesssalary = models.IntegerField(label="तुम्हाला वाटत आहे की येत्या तीन महिन्यांत त्यांना मिळणार्या उत्पन्न "
+                                                "किंवा पगारापेक्षा कमी पगार मिळेल?",
+                                          choices=[[1, "हो"], [2, "नाही"], [3,"कदाचित"]])
+    losejob3months = models.IntegerField(label="जर आपण तीन महिन्यात व्यवसाय किंवा नोकरी गमावल्यास, किंवा पुढील तीन "
+                                               "महिन्यांत व्यवसाय किंवा नोकरी न मिळाल्यास, आपण आपल्या कुटुंबाची कशी "
+                                               "पूर्तता कराल?",
+                                         choices=[
+                                             [1, "बचत केलेले पैसे मी वापरेन"],
+                                             [2, "गुंतवलेली रक्कम मी वापरेन"],
+                                             [3, "मी कर्ज घेईन"],
+                                             [4, "मी घरातील काहीतरी विकेन (सोने, चांदी..)"],
+                                             [5, "मी माझ्या गावी परत जाईन"],
+                                         ])
+    otherskill = models.IntegerField(label="आपल्याकडे वेगळी नोकरी शोधण्यासाठी आणखी एक कौशल्य आहे?", choices=yesNoChoice)
+    whatotherjob = models.IntegerField(label="आपण कोणती दुसरी नोकरी शोधाल?",
+                                       choices=[
+                                           [1, "बांधकाम चे काम"],
+                                           [2, "शिपाई ची नोकरी"],
+                                           [3, "डिलिव्हरी"],
+                                           [4, "शेतीचे काम"],
+                                           [5, "रोजंदारीचे काम"],
+                                           [6, "कारकुनी काम"],
+                                           [7, "इतर"]
+                                       ])
+    willyougetone = models.BooleanField(label="तुम्हाला वाटते की तुम्हाला दुसरी नोकरी मिळेल?", choices=yesNoChoice)
+    otherjobsalary = models.IntegerField(label="इतर नोकरीत पगार म्हणजे काय असे तुम्हाला वाटते?", choices=[
         [1, "मी आता जितके मिळवितो तितकेच"],
         [2, "मी आता जे मिळवितो त्यापेक्षा कमी"],
         [3, "मी आता मिळवण्यापेक्षा अधिक"]
     ])
-    standardofliving=models.IntegerField(label="आपल्याला असे वाटते की एक विशिष्ट जीवनमान टिकवून ठेवण्यासाठी तो पगार समाधानकारक असेल?",choices=yesNoChoice)
-    twojobs=models.IntegerField(label="आपल्याला असे वाटते की जीवनमान टिकविण्यासाठी आपल्याला दोन नोकर्या घ्याव्या लागतील?",choices=yesNoChoice)
-    competitiontofind=models.IntegerField(label="आपणास असे वाटते की दोन नोकर्‍या शोधण्यात आपल्यात खूप स्पर्धा आहे?", choices=yesNoChoice)
-    physicallywell=models.IntegerField(label="आपल्याला असे वाटते की आपण दोन नोकरीसाठी शारीरिकदृष्ट्या चांगले आहात?", choices=yesNoChoice)
-    covidhealth=models.IntegerField(label="आपण चिंता करतात का आपणास कोविड झाल्यास, आपल्या दीर्घकालीन आरोग्यावर परिणाम होईल आणि यामुळे कायमचे काम करण्याची शारीरिक क्षमतेवर परिणाम होईल?",choices=yesNoChoice)
-    optimistic=models.IntegerField(label="0-3 च्या प्रमाणात, आपण आपल्या भविष्याबद्दल किती आशावादी आहात?",choices=[
-        [1,"0"],
-        [2, "1"],
-        [3, "2"],
-        [4, "3"]
-    ])
\ No newline at end of file
+    standardofliving = models.BooleanField(
+        label="आपल्याला असे वाटते की एक विशिष्ट जीवनमान टिकवून ठेवण्यासाठी तो पगार समाधानकारक असेल?",
+        choices=yesNoChoice)
+    twojobs = models.IntegerField(
+        label="आपल्याला असे वाटते की जीवनमान टिकविण्यासाठी आपल्याला दोन नोकर्या घ्याव्या लागतील?", choices=yesNoChoice)
+    competitiontofind = models.BooleanField(label="आपणास असे वाटते की दोन नोकर्‍या शोधण्यात आपल्यात खूप स्पर्धा आहे?",
+                                            choices=yesNoChoice)
+    physicallywell = models.BooleanField(label="आपल्याला असे वाटते की आपण दोन नोकरीसाठी शारीरिकदृष्ट्या चांगले आहात?",
+                                         choices=yesNoChoice)
+    covidhealth = models.BooleanField(
+        label="आपण चिंता करतात का आपणास कोविड झाल्यास, आपल्या दीर्घकालीन आरोग्यावर परिणाम होईल आणि यामुळे कायमचे काम "
+              "करण्याची शारीरिक क्षमतेवर परिणाम होईल?",
+        choices=yesNoChoice)
+    optimistic = models.IntegerField(label="0-3 च्या प्रमाणात, आपण आपल्या भविष्याबद्दल किती आशावादी आहात?", choices=[0,1,2,3])
Index: oTree_exp/incomeuncertainty_marathi/pages.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from otree.api import Currency as c, currency_range\r\nfrom ._builtin import Page, WaitPage\r\nfrom .models import Constants\r\n\r\n\r\nclass MyPage(Page):\r\n    pass\r\n\r\n\r\nclass ResultsWaitPage(WaitPage):\r\n    pass\r\n\r\n\r\nclass Results(Page):\r\n    pass\r\n\r\n\r\npage_sequence = [MyPage, ResultsWaitPage, Results]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- oTree_exp/incomeuncertainty_marathi/pages.py	(revision 068291db5174be924ff1e6f8d18612373afd45e0)
+++ oTree_exp/incomeuncertainty_marathi/pages.py	(date 1603021272346)
@@ -1,18 +1,164 @@
-from otree.api import Currency as c, currency_range
 from ._builtin import Page, WaitPage
-from .models import Constants
+
+
+class SurveyFormBase(Page):
+    template_name = 'incomeuncertainty_marathi/MyPage.html'
+    form_model = 'player'
+
+
+class HowManyPeople(SurveyFormBase):
+    form_fields = ['howmanypeople']
+
+
+class Howmanydependent(SurveyFormBase):
+    form_fields = ['howmanydependent']
+
+
+class Wenttoworktoday(SurveyFormBase):
+    form_fields = ['wenttoworktoday']
+
+
+class Wenttoworkbeforelockdown(SurveyFormBase):
+    form_fields = ['wenttoworkbeforelockdown']
+
+
+class Tempwork(SurveyFormBase):
+    form_fields = ['tempwork']
+
+
+class Areyouemployed(SurveyFormBase):
+    form_fields = ['areyouemployed']
+
+
+class Howmanymonthsago(SurveyFormBase):
+    form_fields = ['howmanymonthsago']
+
+
+class Directlylostjob(SurveyFormBase):
+    form_fields = ['Directlylostjob']
+
+
+class Fullorpartial(SurveyFormBase):
+    form_fields = ['fullorpartial']
+
+
+class Ifpartial(SurveyFormBase):
+    form_fields = ['ifpartial']
+
+
+class Otheremployed(SurveyFormBase):
+    form_fields = ['otheremployed']
+
+
+class Otherfullorpartial(SurveyFormBase):
+    form_fields = ['otherfullorpartial']
+
+
+class Otherifpartial(SurveyFormBase):
+    form_fields = ['otherifpartial']
+
+
+class Incomebeforelockdown(SurveyFormBase):
+    form_fields = ['incomebeforelockdown']
+
+
+class Incometoday(SurveyFormBase):
+    form_fields = ['incometoday']
+
+
+class Jobsecureorfinding(SurveyFormBase):
+    form_fields = ['jobsecureorfinding']
+
+
+class Lesssalary(SurveyFormBase):
+    form_fields = ['lesssalary']
+
+
+class Otherjobssecureorfinding(SurveyFormBase):
+    form_fields = ['otherjobssecureorfinding']
+
+
+class Otherlesssalary(SurveyFormBase):
+    form_fields = ['otherlesssalary']
+
+
+class Losejob3months(SurveyFormBase):
+    form_fields = ['losejob3months']
+
+
+class Otherskill(SurveyFormBase):
+    form_fields = ['otherskill']
+
+
+class Whatotherjob(SurveyFormBase):
+    form_fields = ['whatotherjob']
+
+
+class Willyougetone(SurveyFormBase):
+    form_fields = ['willyougetone']
+
+
+class Otherjobsalary(SurveyFormBase):
+    form_fields = ['otherjobsalary']
+
+
+class Standardofliving(SurveyFormBase):
+    form_fields = ['standardofliving']
 
 
-class MyPage(Page):
-    pass
+class Twojobs(SurveyFormBase):
+    form_fields = ['twojobs']
+
+
+class Competitiontofind(SurveyFormBase):
+    form_fields = ['competitiontofind']
+
+
+class Physicallywell(SurveyFormBase):
+    form_fields = ['physicallywell']
+
+
+class Covidhealth(SurveyFormBase):
+    form_fields = ['covidhealth']
+
+
+class Optimistic(SurveyFormBase):
+    form_fields = ['optimistic']
 
 
 class ResultsWaitPage(WaitPage):
     pass
 
 
-class Results(Page):
-    pass
-
-
-page_sequence = [MyPage, ResultsWaitPage, Results]
+page_sequence = [
+    HowManyPeople,
+    Howmanydependent,
+    Wenttoworktoday,
+    Wenttoworkbeforelockdown,
+    Tempwork,
+    Areyouemployed,
+    Howmanymonthsago,
+    Directlylostjob,
+    Fullorpartial,
+    Ifpartial,
+    Otheremployed,
+    Otherfullorpartial,
+    Otherifpartial,
+    Incomebeforelockdown,
+    Incometoday,
+    Jobsecureorfinding,
+    Lesssalary,
+    Otherjobssecureorfinding,
+    Otherlesssalary,
+    Losejob3months,
+    Otherskill,
+    Whatotherjob,
+    Willyougetone,
+    Otherjobsalary,
+    Standardofliving,
+    Twojobs,
+    Competitiontofind,
+    Physicallywell,
+    Covidhealth,
+    Optimistic
+]
Index: oTree_exp/incomeuncertainty_marathi/templates/incomeuncertainty_marathi/MyPage.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"global/Page.html\" %}\r\n{% load otree static %}\r\n\r\n{% block title %}\r\n    Page title\r\n{% endblock %}\r\n\r\n{% block content %}\r\n\r\n    {% next_button %}\r\n\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- oTree_exp/incomeuncertainty_marathi/templates/incomeuncertainty_marathi/MyPage.html	(revision 068291db5174be924ff1e6f8d18612373afd45e0)
+++ oTree_exp/incomeuncertainty_marathi/templates/incomeuncertainty_marathi/MyPage.html	(date 1603021287151)
@@ -1,12 +1,18 @@
 {% extends "global/Page.html" %}
-{% load otree static %}
+{% load otree %}
 
 {% block title %}
-    Page title
+    आय की चिंता सर्वेक्षण
 {% endblock %}
 
 {% block content %}
 
+    <p>
+        पुढील प्रश्नांची उत्तरे द्या
+    </p>
+
+    {% formfields %}
+
     {% next_button %}
 
 {% endblock %}
Index: oTree_exp/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from os import environ\r\nDEBUG=False\r\nSESSION_CONFIGS = [\r\n    dict(\r\n        name='public_goods',\r\n        display_name=\"Public Goods\",\r\n        num_demo_participants=3,\r\n        app_sequence=['public_goods', 'payment_info'],\r\n    ),\r\n    dict(\r\n        name='guess_two_thirds',\r\n        display_name=\"Guess 2/3 of the Average\",\r\n        num_demo_participants=3,\r\n        app_sequence=['guess_two_thirds', 'payment_info'],\r\n    ),\r\n    dict(\r\n        name='depression_optimism_scale',\r\n        display_name='औदासिन्य आणि आशावाद सर्वेक्षण',\r\n        num_demo_participants=1,\r\n        app_sequence=['depression_optimism_scale'],\r\n    ),\r\n    dict(\r\n        name='depression_optimism_scale_hindi',\r\n        display_name='औदासिन्य और आशावाद सर्वेक्षण',\r\n        num_demo_participants=1,\r\n        app_sequence=['depression_optimism_scale_hindi'],\r\n    ),\r\n    dict(\r\n        name='savings_game',\r\n        display_name='savings game',\r\n        num_demo_participants=1,\r\n        app_sequence=['savings_expense_game'],\r\n    ),\r\n\r\n]\r\n\r\n# if you set a property in SESSION_CONFIG_DEFAULTS, it will be inherited by all configs\r\n# in SESSION_CONFIGS, except those that explicitly override it.\r\n# the session config can be accessed from methods in your apps as self.session.config,\r\n# e.g. self.session.config['participation_fee']\r\n\r\nSESSION_CONFIG_DEFAULTS = dict(\r\n    real_world_currency_per_point=1.00, participation_fee=0.00, doc=\"\"\r\n)\r\n\r\n# ISO-639 code\r\n# for example: de, fr, ja, ko, zh-hans\r\nLANGUAGE_CODE = 'mr'\r\n\r\n# e.g. EUR, GBP, CNY, JPY\r\nREAL_WORLD_CURRENCY_CODE = 'INR'\r\nUSE_POINTS = True\r\n\r\nROOMS = [\r\n    dict(\r\n        name='econ101',\r\n        display_name='Econ 101 class',\r\n        participant_label_file='_rooms/econ101.txt',\r\n    ),\r\n    dict(name='live_demo', display_name='Room for live demo (no participant labels)'),\r\n]\r\n\r\nADMIN_USERNAME = 'admin'\r\n# for security, best to set admin password in an environment variable\r\nADMIN_PASSWORD = environ.get('OTREE_ADMIN_PASSWORD')\r\n\r\nDEMO_PAGE_INTRO_HTML = \"\"\"\r\nHere are some oTree games.\r\n\"\"\"\r\n\r\n# don't share this with anybody.\r\nSECRET_KEY = '_l+m7#$h$m32=7rvke^o-nx=eoiz%!#e&d5ut+fw3^qt3$a4yr'\r\n\r\n# DEBUG=False\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.humanize',\r\n    'otree',\r\n\r\n]\r\n\r\n# inactive session configs\r\n# dict(name='trust', display_name=\"Trust Game\", num_demo_participants=2, app_sequence=['trust', 'payment_info']),\r\n# dict(name='prisoner', display_name=\"Prisoner's Dilemma\", num_demo_participants=2,\r\n#      app_sequence=['prisoner', 'payment_info']),\r\n# dict(name='volunteer_dilemma', display_name=\"Volunteer's Dilemma\", num_demo_participants=3,\r\n#      app_sequence=['volunteer_dilemma', 'payment_info']),\r\n# dict(name='cournot', display_name=\"Cournot Competition\", num_demo_participants=2, app_sequence=[\r\n#     'cournot', 'payment_info'\r\n# ]),\r\n# dict(name='dictator', display_name=\"Dictator Game\", num_demo_participants=2,\r\n#      app_sequence=['dictator', 'payment_info']),\r\n# dict(name='matching_pennies', display_name=\"Matching Pennies\", num_demo_participants=2, app_sequence=[\r\n#     'matching_pennies',\r\n# ]),\r\n# dict(name='traveler_dilemma', display_name=\"Traveler's Dilemma\", num_demo_participants=2,\r\n#      app_sequence=['traveler_dilemma', 'payment_info']),\r\n# dict(name='bargaining', display_name=\"Bargaining Game\", num_demo_participants=2,\r\n#      app_sequence=['bargaining', 'payment_info']),\r\n# dict(name='common_value_auction', display_name=\"Common Value Auction\", num_demo_participants=3,\r\n#      app_sequence=['common_value_auction', 'payment_info']),\r\n# dict(name='bertrand', display_name=\"Bertrand Competition\", num_demo_participants=2, app_sequence=[\r\n#     'bertrand', 'payment_info'\r\n# ]),\r\n# dict(name='public_goods_simple', display_name=\"Public Goods (simple version from tutorial)\",\r\n#      num_demo_participants=3, app_sequence=['public_goods_simple', 'payment_info']),\r\n# dict(name='trust_simple', display_name=\"Trust Game (simple version from tutorial)\", num_demo_participants=2,\r\n#      app_sequence=['trust_simple']),\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- oTree_exp/settings.py	(revision 068291db5174be924ff1e6f8d18612373afd45e0)
+++ oTree_exp/settings.py	(date 1603021542835)
@@ -1,12 +1,6 @@
 from os import environ
-DEBUG=False
+#DEBUG=False
 SESSION_CONFIGS = [
-    dict(
-        name='public_goods',
-        display_name="Public Goods",
-        num_demo_participants=3,
-        app_sequence=['public_goods', 'payment_info'],
-    ),
     dict(
         name='guess_two_thirds',
         display_name="Guess 2/3 of the Average",
@@ -28,9 +22,22 @@
     dict(
         name='savings_game',
         display_name='savings game',
+
         num_demo_participants=1,
         app_sequence=['savings_expense_game'],
     ),
+    dict(
+        name='Marathi',
+        display_name='Survey In marathi',
+        num_demo_participants=1,
+        app_sequence=['incomeuncertainty_marathi'],
+    ),
+    dict(
+        name='Hindi',
+        display_name='Survey In Hindi',
+        num_demo_participants=1,
+        app_sequence=['incomeuncertainty_hindi'],
+    )
 
 ]
 
Index: oTree_exp/savings_expense_game/pages.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from ._builtin import Page, WaitPage\r\nfrom .models import Constants\r\nfrom .strings import *\r\n\r\n\r\ndef emergedFundValidate(enteredAmt, round_no):\r\n    if enteredAmt > Constants.emergedFund[round_no]:\r\n        return PG_DEBTCHOICE_LOANSUM_GREAT_ERROR\r\n    elif enteredAmt < Constants.emergedFund[round_no]:\r\n        return PG_DEBTCHOICE_LOANSUM_LESS_ERROR\r\n    else:\r\n        return None\r\n\r\n\r\ndef salaryFundValidate(enteredAmt, round_no):\r\n    if enteredAmt > Constants.salaryFund[round_no]:\r\n        return PG_MY_FIELD_SUM_GREAT_ERROR\r\n    elif enteredAmt < Constants.salaryFund[round_no]:\r\n        return PG_MY_FIELD_SUM_LESS_ERROR\r\n    else:\r\n        return None\r\n\r\n\r\nclass MyPage(Page):\r\n    form_model = \"player\"\r\n\r\n    def __init__(self):\r\n        self.fieldList = ['consumption', 'savings']\r\n\r\n    def get_form_fields(self):\r\n\r\n        if self.participant.vars['debt_1_amount'] > 0:\r\n            self.fieldList.append('EMI1')\r\n\r\n        if self.participant.vars['debt_2_amount'] > 0:\r\n            self.fieldList.append('EMI2')\r\n\r\n        if self.participant.vars['debt_3_amount'] > 0:\r\n            self.fieldList.append('EMI3')\r\n\r\n        return self.fieldList\r\n\r\n    def vars_for_template(self):\r\n        # pass question depend on the round number\r\n        return {\r\n            'roundSalary': Constants.salaryFund[self.round_number],\r\n        }\r\n\r\n    def before_next_page(self):\r\n        # add entered saving to cumulative savings variable\r\n        self.participant.vars['totalSavings'] += int(self.player.savings)\r\n        self.participant.vars['savings_color'] = '#34ce57'  # green color as savings increased\r\n\r\n        reduceDebt = 0\r\n        if 'EMI1' in self.fieldList:\r\n            self.participant.vars['debt_1_amount'] -= self.player.EMI1\r\n            self.participant.vars['debt_1_round'] -= 1\r\n            reduceDebt -= self.player.EMI1\r\n\r\n        if 'EMI2' in self.fieldList:\r\n            self.participant.vars['debt_2_amount'] -= self.player.EMI2\r\n            self.participant.vars['debt_2_round'] -= 1\r\n            reduceDebt -= self.player.EMI2\r\n\r\n        if 'EMI3' in self.fieldList:\r\n            self.participant.vars['debt_3_amount'] -= self.player.EMI3\r\n            self.participant.vars['debt_3_round'] -= 1\r\n            reduceDebt -= self.player.EMI3\r\n\r\n        self.participant.vars['totalDebt'] -= int(reduceDebt)\r\n\r\n    def error_message(self, values):\r\n        # display error if sum of 'savings' and 'consumption' field is not exactly equal to 10,000\r\n        emiSum = 0\r\n        if ('EMI1' in self.fieldList) and (values['EMI1'] <= self.participant.vars['emi_1']):\r\n            return EMI_1_LABEL.format(self.participant.vars['emi_1'])\r\n        elif 'EMI1' in self.fieldList:\r\n            emiSum += int(self.participant.vars['emi_1'])\r\n\r\n        if ('EMI2' in self.fieldList) and (values['EMI2'] <= self.participant.vars['emi_2']):\r\n            return EMI_2_LABEL.format(self.participant.vars['emi_2'])\r\n        elif 'EMI2' in self.fieldList:\r\n            emiSum += int(self.participant.vars['emi_2'])\r\n\r\n        if ('EMI3' in self.fieldList) and (values['EMI3'] <= self.participant.vars['emi_3']):\r\n            return EMI_3_LABEL.format(self.participant.vars['emi_3'])\r\n        elif 'EMI3' in self.fieldList:\r\n            emiSum += int(self.participant.vars['emi_3'])\r\n\r\n        field_sum = (int(values['consumption']) + int(values['savings']) + int(emiSum))\r\n        error = salaryFundValidate(field_sum, self.round_number)\r\n        if error is not None:\r\n            return error\r\n\r\n\r\nclass DebtChoicePage(Page):\r\n    form_model = \"player\"\r\n    form_fields = ['debtChoice', 'fromSavingAmt', 'fromLoanAmount']\r\n\r\n    def vars_for_template(self):\r\n        return {\r\n            'emergedFund': Constants.emergedFund[self.round_number],\r\n            'fromTotalSavingChoice': PLAYER_DEBTCHOICE_S[0],\r\n        }\r\n\r\n    def is_displayed(self):\r\n        return True if self.round_number in Constants.emergedFund.keys() else False\r\n\r\n    def error_message(self, values):\r\n        # display error if expenditure is not totally spend from savings\r\n        # and sum of amount withdrawal from savings and amount taken as loan is not equal to 10,000\r\n        if values['debtChoice'] != PLAYER_DEBTCHOICE_S[0]:\r\n            loanSaveSum = int(values['fromSavingAmt']) + int(values['fromLoanAmount'])\r\n\r\n            error = emergedFundValidate(loanSaveSum, self.round_number)\r\n            if error is not None:\r\n                return error\r\n\r\n        # if totalSavings is less than emergencyFund appeared, then return error.\r\n        else:\r\n            if self.participant.vars['totalSavings'] < Constants.emergedFund[self.round_number]:\r\n                return PG_DEBTCHOICE_LESS_SAVINGS_ERROR\r\n\r\n    def before_next_page(self):\r\n        # if expenditure is chose as from totalSaving then set fromSavingAmt = emergencyFund\r\n        if self.player.debtChoice == PLAYER_DEBTCHOICE_S[0]:\r\n            # at round when emergencyFund appear, set field related to it.\r\n            self.player.fromSavingAmt = Constants.emergedFund[self.round_number]\r\n            self.player.fromLoanAmount = 0\r\n\r\n        # else create debt and handle debt\r\n        else:\r\n            newDebt = {\r\n                'amountRemaining': self.player.fromLoanAmount,\r\n                'emiRoundRemaining': 10,\r\n                'emiAmount': self.player.fromLoanAmount / 10\r\n            }\r\n            self.participant.vars['totalDebt'] += newDebt['amountRemaining']\r\n\r\n            if self.participant.vars['emi_1'] == 0:\r\n                self.participant.vars['emi_1'] = newDebt['emiAmount']\r\n                self.participant.vars['debt_1_amount'] = newDebt['amountRemaining']\r\n                self.participant.vars['debt_1_round'] = newDebt['emiRoundRemaining']\r\n\r\n            elif self.participant.vars['emi_2'] == 0:\r\n                self.participant.vars['emi_2'] = newDebt['emiAmount']\r\n                self.participant.vars['debt_2_amount'] = newDebt['amountRemaining']\r\n                self.participant.vars['debt_2_round'] = newDebt['emiRoundRemaining']\r\n\r\n            elif self.participant.vars['emi_3'] == 0:\r\n                self.participant.vars['emi_3'] = newDebt['emiAmount']\r\n                self.participant.vars['debt_3_amount'] = newDebt['amountRemaining']\r\n                self.participant.vars['debt_3_round'] = newDebt['emiRoundRemaining']\r\n\r\n        # subtract 'fromSavingAmt' from cumulative totalSavings\r\n        self.participant.vars['totalSavings'] -= self.player.fromSavingAmt\r\n        self.participant.vars['savings_color'] = '#f50707'  # red color as savings decreased\r\n\r\n\r\nclass ResultsWaitPage(WaitPage):\r\n    pass\r\n\r\n\r\nclass Results(Page):\r\n    pass\r\n\r\n\r\npage_sequence = [MyPage, DebtChoicePage, ]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- oTree_exp/savings_expense_game/pages.py	(revision 068291db5174be924ff1e6f8d18612373afd45e0)
+++ oTree_exp/savings_expense_game/pages.py	(date 1603004462193)
@@ -5,9 +5,9 @@
 
 def emergedFundValidate(enteredAmt, round_no):
     if enteredAmt > Constants.emergedFund[round_no]:
-        return PG_DEBTCHOICE_LOANSUM_GREAT_ERROR
+        return PG_DEBTCHOICE_LOANSUM_GREAT_ERROR.format(Constants.emergedFund[round_no])
     elif enteredAmt < Constants.emergedFund[round_no]:
-        return PG_DEBTCHOICE_LOANSUM_LESS_ERROR
+        return PG_DEBTCHOICE_LOANSUM_LESS_ERROR.format(Constants.emergedFund[round_no])
     else:
         return None
 
@@ -21,6 +21,15 @@
         return None
 
 
+def calculateLoan(amount, intrestPerRound, noOfRounds):
+    intrestAmount = int((amount * intrestPerRound * noOfRounds) / 100)
+    return intrestAmount + amount
+
+
+def calculateEmi(loanAmount, rounds):
+    return int(loanAmount / rounds)
+
+
 class MyPage(Page):
     form_model = "player"
 
@@ -29,13 +38,13 @@
 
     def get_form_fields(self):
 
-        if self.participant.vars['debt_1_amount'] > 0:
+        if (self.participant.vars['debt_1_round'] > 0) and (self.participant.vars['debt_1_limit'] > 0):
             self.fieldList.append('EMI1')
 
-        if self.participant.vars['debt_2_amount'] > 0:
+        if (self.participant.vars['debt_2_round'] > 0) and (self.participant.vars['debt_2_limit'] > 0):
             self.fieldList.append('EMI2')
 
-        if self.participant.vars['debt_3_amount'] > 0:
+        if (self.participant.vars['debt_3_round'] > 0) and (self.participant.vars['debt_3_limit'] > 0):
             self.fieldList.append('EMI3')
 
         return self.fieldList
@@ -52,40 +61,60 @@
         self.participant.vars['savings_color'] = '#34ce57'  # green color as savings increased
 
         reduceDebt = 0
+
+        # verify EMIs
         if 'EMI1' in self.fieldList:
             self.participant.vars['debt_1_amount'] -= self.player.EMI1
             self.participant.vars['debt_1_round'] -= 1
             reduceDebt -= self.player.EMI1
+            # if less than ideal emi paid by user then recalculate emi
+            if self.player.EMI1 < self.participant.vars['emi_1']:
+                self.participant.vars['emi_1'] = calculateEmi(self.participant.vars['debt_1_amount'],
+                                                              self.participant.vars['debt_1_round'])
+                self.participant.vars['debt_1_limit']-=1
 
         if 'EMI2' in self.fieldList:
             self.participant.vars['debt_2_amount'] -= self.player.EMI2
             self.participant.vars['debt_2_round'] -= 1
             reduceDebt -= self.player.EMI2
+            if self.player.EMI2 < self.participant.vars['emi_2']:
+                self.participant.vars['emi_2'] = calculateEmi(self.participant.vars['debt_2_amount'],
+                                                              self.participant.vars['debt_2_round'])
+                self.participant.vars['debt_2_limit'] -= 1
 
         if 'EMI3' in self.fieldList:
             self.participant.vars['debt_3_amount'] -= self.player.EMI3
             self.participant.vars['debt_3_round'] -= 1
             reduceDebt -= self.player.EMI3
+            if self.player.EMI3 < self.participant.vars['emi_3']:
+                self.participant.vars['emi_3'] = calculateEmi(self.participant.vars['debt_3_amount'],
+                                                              self.participant.vars['debt_3_round'])
+                self.participant.vars['debt_3_limit'] -= 1
 
         self.participant.vars['totalDebt'] -= int(reduceDebt)
 
     def error_message(self, values):
-        # display error if sum of 'savings' and 'consumption' field is not exactly equal to 10,000
+        # return error if cosume amount is less than set standard
+        if values['consumption'] < Constants.reqConsumption:
+            return PG_MY_CONSUME_LESS_ERROR.format(Constants.reqConsumption)
+
+        # display error if sum of 'savings', 'consumption' and EMIs field is not exactly equal to round amount
+        # also validate EMIs are less than equal to ideal EMI
         emiSum = 0
-        if ('EMI1' in self.fieldList) and (values['EMI1'] <= self.participant.vars['emi_1']):
+        if ('EMI1' in self.fieldList) and (values['EMI1'] > self.participant.vars['emi_1']):
             return EMI_1_LABEL.format(self.participant.vars['emi_1'])
         elif 'EMI1' in self.fieldList:
-            emiSum += int(self.participant.vars['emi_1'])
+            emiSum += int(values['EMI1'])
 
-        if ('EMI2' in self.fieldList) and (values['EMI2'] <= self.participant.vars['emi_2']):
+        if ('EMI2' in self.fieldList) and (values['EMI2'] > self.participant.vars['emi_2']):
             return EMI_2_LABEL.format(self.participant.vars['emi_2'])
         elif 'EMI2' in self.fieldList:
-            emiSum += int(self.participant.vars['emi_2'])
+            emiSum += int(values['EMI2'])
 
-        if ('EMI3' in self.fieldList) and (values['EMI3'] <= self.participant.vars['emi_3']):
+        if ('EMI3' in self.fieldList) and (values['EMI3'] > self.participant.vars['emi_3']):
             return EMI_3_LABEL.format(self.participant.vars['emi_3'])
         elif 'EMI3' in self.fieldList:
-            emiSum += int(self.participant.vars['emi_3'])
+            emiSum += int(values['EMI3'])
 
         field_sum = (int(values['consumption']) + int(values['savings']) + int(emiSum))
         error = salaryFundValidate(field_sum, self.round_number)
@@ -100,18 +129,19 @@
     def vars_for_template(self):
         return {
             'emergedFund': Constants.emergedFund[self.round_number],
-            'fromTotalSavingChoice': PLAYER_DEBTCHOICE_S[0],
         }
 
     def is_displayed(self):
-        return True if self.round_number in Constants.emergedFund.keys() else False
+        return True if self.round_number in Constants.debtRound else False
 
     def error_message(self, values):
         # display error if expenditure is not totally spend from savings
         # and sum of amount withdrawal from savings and amount taken as loan is not equal to 10,000
-        if values['debtChoice'] != PLAYER_DEBTCHOICE_S[0]:
+        if int(values['debtChoice']) != 0:
+            if self.participant.vars['totalSavings'] < values['fromSavingAmt']:
+                return PG_DEBTCHOICE_LESS_SAVINGS_ERROR
+
             loanSaveSum = int(values['fromSavingAmt']) + int(values['fromLoanAmount'])
-
             error = emergedFundValidate(loanSaveSum, self.round_number)
             if error is not None:
                 return error
@@ -123,39 +153,59 @@
 
     def before_next_page(self):
         # if expenditure is chose as from totalSaving then set fromSavingAmt = emergencyFund
-        if self.player.debtChoice == PLAYER_DEBTCHOICE_S[0]:
+        if self.player.debtChoice == int(self.player.debtChoice):
             # at round when emergencyFund appear, set field related to it.
             self.player.fromSavingAmt = Constants.emergedFund[self.round_number]
             self.player.fromLoanAmount = 0
 
-        # else create debt and handle debt
+        # else create debt according selected option
         else:
-            newDebt = {
-                'amountRemaining': self.player.fromLoanAmount,
-                'emiRoundRemaining': 10,
-                'emiAmount': self.player.fromLoanAmount / 10
+            chooseOpt = int(self.player.debtChoice)
+            loanAmt = int(self.player.fromLoanAmount)
+
+            debtDetails = Constants.debtChoice[self.round_number][
+                chooseOpt - 1]  # get details of debt from  Constants class
+            interest = debtDetails['interest'] if debtDetails['type'] == 'M' else debtDetails[
+                                                                                      'interest'] / 12  # calculate monthly intrest
+            totalAmount = calculateLoan(loanAmt, interest, debtDetails['rounds'])
+
+            print('[interest]-', interest)
+
+            NewDebt = {
+                'amountRemaining': totalAmount,
+                'emiRoundRemaining': debtDetails['rounds'],
+                'emiAmount': calculateEmi(totalAmount, debtDetails['rounds'])
             }
-            self.participant.vars['totalDebt'] += newDebt['amountRemaining']
 
-            if self.participant.vars['emi_1'] == 0:
-                self.participant.vars['emi_1'] = newDebt['emiAmount']
-                self.participant.vars['debt_1_amount'] = newDebt['amountRemaining']
-                self.participant.vars['debt_1_round'] = newDebt['emiRoundRemaining']
+            print(NewDebt)
+
+            self.setLoan(NewDebt)
+            self.player.debtChoice = PLAYER_DEBTCHOICE_S[1].format(debtDetails["interest"],
+                                                                   "Month" if debtDetails["type"] == "M" else "Year",
+                                                                   debtDetails["rounds"])
+
+            self.participant.vars['totalDebt'] += NewDebt['amountRemaining']
+
+        # subtract 'fromSavingAmt' from cumulative totalSavings
+        self.participant.vars['totalSavings'] -= self.player.fromSavingAmt
+        self.participant.vars['savings_color'] = '#f50707'  # red color as savings decreased
+
+    def setLoan(self, newDebt):
+        if self.participant.vars['emi_1'] == 0:
+            self.participant.vars['emi_1'] = newDebt['emiAmount']
+            self.participant.vars['debt_1_amount'] = newDebt['amountRemaining']
+            self.participant.vars['debt_1_round'] = newDebt['emiRoundRemaining']
 
-            elif self.participant.vars['emi_2'] == 0:
-                self.participant.vars['emi_2'] = newDebt['emiAmount']
-                self.participant.vars['debt_2_amount'] = newDebt['amountRemaining']
-                self.participant.vars['debt_2_round'] = newDebt['emiRoundRemaining']
+        elif self.participant.vars['emi_2'] == 0:
+            self.participant.vars['emi_2'] = newDebt['emiAmount']
+            self.participant.vars['debt_2_amount'] = newDebt['amountRemaining']
+            self.participant.vars['debt_2_round'] = newDebt['emiRoundRemaining']
 
-            elif self.participant.vars['emi_3'] == 0:
-                self.participant.vars['emi_3'] = newDebt['emiAmount']
-                self.participant.vars['debt_3_amount'] = newDebt['amountRemaining']
-                self.participant.vars['debt_3_round'] = newDebt['emiRoundRemaining']
+        elif self.participant.vars['emi_3'] == 0:
+            self.participant.vars['emi_3'] = newDebt['emiAmount']
+            self.participant.vars['debt_3_amount'] = newDebt['amountRemaining']
+            self.participant.vars['debt_3_round'] = newDebt['emiRoundRemaining']
 
-        # subtract 'fromSavingAmt' from cumulative totalSavings
-        self.participant.vars['totalSavings'] -= self.player.fromSavingAmt
-        self.participant.vars['savings_color'] = '#f50707'  # red color as savings decreased
-
 
 class ResultsWaitPage(WaitPage):
     pass
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"BranchesTreeState\">\r\n    <expand>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </expand>\r\n    <select>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"BRANCH:origin/master\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </select>\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"7ff55e55-eaa2-49c3-b406-38d4b805ea2c\" name=\"Default Changelist\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_14-Oct-20_11_31__Default_Changelist_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_14-Oct-20_11_31__Default_Changelist_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15-10-2020_11_05_PM__Default_Changelist_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15-10-2020_11_05_PM__Default_Changelist_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15-Oct-20_23_01__Default_Changelist_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15-Oct-20_23_01__Default_Changelist_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/oTree_exp/field_survey_marathi/__init__.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/oTree_exp/SES_marathi/__init__.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/oTree_exp/field_survey_marathi/_builtin/__init__.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/oTree_exp/SES_marathi/_builtin/__init__.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/oTree_exp/field_survey_marathi/models.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/oTree_exp/SES_marathi/models.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/oTree_exp/field_survey_marathi/pages.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/oTree_exp/SES_marathi/pages.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/oTree_exp/field_survey_marathi/templates/field_survey_marathi/MyPage.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/oTree_exp/SES_marathi/templates/field_survey_marathi/MyPage.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/oTree_exp/field_survey_marathi/templates/field_survey_marathi/Results.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/oTree_exp/SES_marathi/templates/field_survey_marathi/Results.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/oTree_exp/field_survey_marathi/tests.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/oTree_exp/SES_marathi/tests.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/oTree_exp/savings_game/pages.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/oTree_exp/savings_game/pages.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/oTree_exp/settings.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/oTree_exp/settings.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"JupyterTrust\" id=\"07f7f5f1-dc9c-46c7-9338-d18b0677ec5a\" />\r\n  <component name=\"ProjectId\" id=\"1ipWfyMY7qlw048QJxP2LrXcFO2\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\r\n    <property name=\"node.js.path.for.package.eslint\" value=\"project\" />\r\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"7ff55e55-eaa2-49c3-b406-38d4b805ea2c\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1602605121137</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1602605121137</updated>\r\n      <workItem from=\"1602605159259\" duration=\"1911000\" />\r\n      <workItem from=\"1602655249030\" duration=\"11763000\" />\r\n      <workItem from=\"1602737985982\" duration=\"9740000\" />\r\n      <workItem from=\"1602991587101\" duration=\"11150000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"267\" y=\"24\" key=\"#Inspections\" timestamp=\"1602999092714\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"689\" />\r\n    </state>\r\n    <state x=\"267\" y=\"24\" key=\"#Inspections/0.0.1280.689@0.0.1280.689\" timestamp=\"1602999092714\" />\r\n    <state x=\"458\" y=\"259\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2\" timestamp=\"1602655283235\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"689\" />\r\n    </state>\r\n    <state x=\"458\" y=\"259\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1280.689@0.0.1280.689\" timestamp=\"1602655283235\" />\r\n    <state x=\"303\" y=\"10\" width=\"672\" height=\"678\" key=\"search.everywhere.popup\" timestamp=\"1602745565972\">\r\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"689\" />\r\n    </state>\r\n    <state x=\"303\" y=\"10\" width=\"672\" height=\"678\" key=\"search.everywhere.popup/0.0.1280.689@0.0.1280.689\" timestamp=\"1602745565972\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision 068291db5174be924ff1e6f8d18612373afd45e0)
+++ .idea/workspace.xml	(date 1603025007307)
@@ -19,26 +19,27 @@
     <select>
       <path>
         <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
-        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
-        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
-        <item name="BRANCH:origin/master" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
+        <item name="BRANCH:master" type="e8cecc67:BranchNodeDescriptor" />
       </path>
     </select>
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="7ff55e55-eaa2-49c3-b406-38d4b805ea2c" name="Default Changelist" comment="">
+    <list default="true" id="e38f25ca-5bb9-4831-ba04-799a123e8137" name="Default Changelist" comment="">
+      <change afterPath="$PROJECT_DIR$/oTree_exp/depression_optimism_scale_hindi/templates/depression_optimism_scale_hindi/MyPage.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_14-Oct-20_11_31__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_14-Oct-20_11_31__Default_Changelist_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15-10-2020_11_05_PM__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15-10-2020_11_05_PM__Default_Changelist_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15-Oct-20_23_01__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15-Oct-20_23_01__Default_Changelist_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17-Oct-20_16_00__Default_Changelist_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17-Oct-20_16_00__Default_Changelist_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/oTree_exp/field_survey_marathi/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/SES_marathi/__init__.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/oTree_exp/field_survey_marathi/_builtin/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/SES_marathi/_builtin/__init__.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/oTree_exp/field_survey_marathi/models.py" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/SES_marathi/models.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/oTree_exp/field_survey_marathi/pages.py" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/SES_marathi/pages.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/oTree_exp/field_survey_marathi/templates/field_survey_marathi/MyPage.html" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/SES_marathi/templates/field_survey_marathi/MyPage.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/oTree_exp/field_survey_marathi/templates/field_survey_marathi/Results.html" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/SES_marathi/templates/field_survey_marathi/Results.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/oTree_exp/field_survey_marathi/tests.py" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/SES_marathi/tests.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/oTree_exp/savings_game/pages.py" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/savings_game/pages.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/oTree_exp/incomeuncertainty_marathi/models.py" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/incomeuncertainty_marathi/models.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/oTree_exp/incomeuncertainty_marathi/pages.py" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/incomeuncertainty_marathi/pages.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/oTree_exp/incomeuncertainty_marathi/templates/incomeuncertainty_marathi/MyPage.html" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/incomeuncertainty_marathi/templates/incomeuncertainty_marathi/MyPage.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/oTree_exp/savings_expense_game/models.py" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/savings_expense_game/models.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/oTree_exp/savings_expense_game/pages.py" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/savings_expense_game/pages.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/oTree_exp/savings_expense_game/strings.py" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/savings_expense_game/strings.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/oTree_exp/savings_expense_game/templates/savings_expense_game/DebtChoicePage.html" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/savings_expense_game/templates/savings_expense_game/DebtChoicePage.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/oTree_exp/savings_expense_game/templates/savings_expense_game/MyPage.html" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/savings_expense_game/templates/savings_expense_game/MyPage.html" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/oTree_exp/settings.py" beforeDir="false" afterPath="$PROJECT_DIR$/oTree_exp/settings.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -46,10 +47,20 @@
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
+  <component name="DjangoConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)">
+    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="HTML File" />
+      </list>
+    </option>
+  </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="JupyterTrust" id="07f7f5f1-dc9c-46c7-9338-d18b0677ec5a" />
+  <component name="JupyterTrust" id="ab1ec63f-9625-4e95-b18c-1970535ecf64" />
   <component name="ProjectId" id="1ipWfyMY7qlw048QJxP2LrXcFO2" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
@@ -57,19 +68,22 @@
     <option name="showLibraryContents" value="true" />
   </component>
   <component name="PropertiesComponent">
+    <property name="DefaultHtmlFileTemplate" value="HTML File" />
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="WebServerToolWindowFactoryState" value="false" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
     <property name="node.js.detected.package.eslint" value="true" />
     <property name="node.js.detected.package.tslint" value="true" />
     <property name="node.js.path.for.package.eslint" value="project" />
     <property name="node.js.path.for.package.tslint" value="project" />
     <property name="node.js.selected.package.eslint" value="(autodetect)" />
     <property name="node.js.selected.package.tslint" value="(autodetect)" />
+    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
-      <changelist id="7ff55e55-eaa2-49c3-b406-38d4b805ea2c" name="Default Changelist" comment="" />
+      <changelist id="e38f25ca-5bb9-4831-ba04-799a123e8137" name="Default Changelist" comment="" />
       <created>1602605121137</created>
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
@@ -77,7 +91,9 @@
       <workItem from="1602605159259" duration="1911000" />
       <workItem from="1602655249030" duration="11763000" />
       <workItem from="1602737985982" duration="9740000" />
-      <workItem from="1602991587101" duration="11150000" />
+      <workItem from="1602826226465" duration="978000" />
+      <workItem from="1602828400035" duration="38734000" />
+      <workItem from="1602917162889" duration="2856000" />
     </task>
     <servers />
   </component>
@@ -109,14 +125,27 @@
     <option name="oldMeFiltersMigrated" value="true" />
   </component>
   <component name="WindowStateProjectService">
-    <state x="267" y="24" key="#Inspections" timestamp="1602999092714">
+    <state x="267" y="24" key="#Inspections" timestamp="1602745715054">
       <screen x="0" y="0" width="1280" height="689" />
     </state>
-    <state x="267" y="24" key="#Inspections/0.0.1280.689@0.0.1280.689" timestamp="1602999092714" />
-    <state x="458" y="259" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1602655283235">
-      <screen x="0" y="0" width="1280" height="689" />
+    <state x="267" y="24" key="#Inspections/0.0.1280.689@0.0.1280.689" timestamp="1602745715054" />
+    <state x="2056" y="287" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog" timestamp="1602856563133">
+      <screen x="1366" y="0" width="1920" height="1080" />
+    </state>
+    <state x="2056" y="287" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/0.0.1366.768/1366.0.1920.1080@1366.0.1920.1080" timestamp="1602856563133" />
+    <state x="2106" y="281" key="FileChooserDialogImpl" timestamp="1602787300142">
+      <screen x="1366" y="0" width="1920" height="1080" />
+    </state>
+    <state x="2106" y="281" key="FileChooserDialogImpl/0.0.1366.768/1366.0.1920.1080@1366.0.1920.1080" timestamp="1602787300142" />
+    <state x="1827" y="185" key="SettingsEditor" timestamp="1603011573773">
+      <screen x="1366" y="0" width="1920" height="1080" />
+    </state>
+    <state x="1827" y="185" key="SettingsEditor/0.0.1366.768/1366.0.1920.1080@1366.0.1920.1080" timestamp="1603011573773" />
+    <state x="2053" y="406" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1603025006912">
+      <screen x="1366" y="0" width="1920" height="1080" />
     </state>
     <state x="458" y="259" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1280.689@0.0.1280.689" timestamp="1602655283235" />
+    <state x="2053" y="406" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1366.768/1366.0.1920.1080@1366.0.1920.1080" timestamp="1603025006912" />
     <state x="303" y="10" width="672" height="678" key="search.everywhere.popup" timestamp="1602745565972">
       <screen x="0" y="0" width="1280" height="689" />
     </state>
Index: oTree_exp/savings_expense_game/strings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># saving consumption form Strings\r\nPLAYER_CONSUMP_LABEL = \"खर्च :\"\r\nPLAYER_SAVING_LABEL = \"बचत :\"\r\n\r\nPG_MY_TITLE_QUE = 'तुम्हाला 10,000 रुपये मिळाले, तुम्ही किती खर्च कराल आणि किती बचत कराल?' # update directly in template, unused here\r\n\r\nPG_MY_FIELD_SUM_GREAT_ERROR = 'तुमची एकूण बचत आणि खर्च १००० रुपयांपेक्षा जास्त आहे.'\r\nPG_MY_FIELD_SUM_LESS_ERROR = 'तुमची एकूण बचत आणि खर्च १००० रुपयांपेक्षा कमी आहेत.'\r\n\r\n# debt choice form strings\r\nPLAYER_DEBTCHOICE_S = [\r\n    'Expend total ammount from savings',\r\n    '3% per month, paid over 10 rounds',\r\n    '8% per year, paid over 12 rounds',\r\n    '10% per year, paid over 10 rounds',\r\n]\r\nPLAYER_DEBTCHOICE_LABEL = 'Which option will you chose to carry your expenses?'\r\nPLAYER_FROM_AMT_LABEL = 'आपण बचतीतून किती पैसे काढून घ्याल'\r\nPLAYER_LOAN_AMT_LABEL = 'कर्ज म्हणून तुम्ही किती रुपये घ्याल?'\r\n\r\nPG_DEBTCHOICE_TITLE_QUE = 'आपत्कालीन परिस्थितीसाठी आपल्याला रुपये %s खर्च करण्याची आवश्यकता आहे. आपण कोणता पर्याय निवडला आहे?'\r\n\r\nPG_DEBTCHOICE_LOANSUM_GREAT_ERROR = 'तुम्ही १०,००० रुपयांपेक्षा जास्त रक्कम काढली आहे.'\r\nPG_DEBTCHOICE_LOANSUM_LESS_ERROR = 'तुम्ही रुपये १०,०० पेक्षा कमी रक्कम काढली आहे. '\r\n\r\nPG_DEBTCHOICE_LESS_SAVINGS_ERROR = 'आपले बचत खर्चपेक्षा कमी आहेत.आपण कर्ज घेणे आवश्यक आहे.'\r\n\r\n# EMI LABELS\r\nEMI_1_LABEL = 'तुमच्या पहिल्या कर्जाची ईएमआय {} आहे'\r\nEMI_2_LABEL = 'तुमच्या दुसर्\u200Dया कर्जाची ईएमआय {} आहे'\r\nEMI_3_LABEL = 'तुमच्या तिसर्\u200Dया कर्जाची ईएमआय {} आहे'\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- oTree_exp/savings_expense_game/strings.py	(revision 068291db5174be924ff1e6f8d18612373afd45e0)
+++ oTree_exp/savings_expense_game/strings.py	(date 1603004462485)
@@ -1,27 +1,32 @@
+
 # saving consumption form Strings
 PLAYER_CONSUMP_LABEL = "खर्च :"
 PLAYER_SAVING_LABEL = "बचत :"
 
-PG_MY_TITLE_QUE = 'तुम्हाला 10,000 रुपये मिळाले, तुम्ही किती खर्च कराल आणि किती बचत कराल?' # update directly in template, unused here
+PG_MY_TITLE_QUE = 'तुम्हाला 10,000 रुपये मिळाले, तुम्ही किती खर्च कराल आणि किती बचत कराल?'  # update directly in
+# template, unused here
 
 PG_MY_FIELD_SUM_GREAT_ERROR = 'तुमची एकूण बचत आणि खर्च १००० रुपयांपेक्षा जास्त आहे.'
 PG_MY_FIELD_SUM_LESS_ERROR = 'तुमची एकूण बचत आणि खर्च १००० रुपयांपेक्षा कमी आहेत.'
 
+PG_MY_CONSUME_LESS_ERROR = 'आपले  खर्च {} रुपयांपेक्षा कमी आहेत.'
+
 # debt choice form strings
 PLAYER_DEBTCHOICE_S = [
     'Expend total ammount from savings',
-    '3% per month, paid over 10 rounds',
+    '{0}% per {1}, paid over {2} rounds',
     '8% per year, paid over 12 rounds',
     '10% per year, paid over 10 rounds',
 ]
+
 PLAYER_DEBTCHOICE_LABEL = 'Which option will you chose to carry your expenses?'
 PLAYER_FROM_AMT_LABEL = 'आपण बचतीतून किती पैसे काढून घ्याल'
 PLAYER_LOAN_AMT_LABEL = 'कर्ज म्हणून तुम्ही किती रुपये घ्याल?'
 
 PG_DEBTCHOICE_TITLE_QUE = 'आपत्कालीन परिस्थितीसाठी आपल्याला रुपये %s खर्च करण्याची आवश्यकता आहे. आपण कोणता पर्याय निवडला आहे?'
 
-PG_DEBTCHOICE_LOANSUM_GREAT_ERROR = 'तुम्ही १०,००० रुपयांपेक्षा जास्त रक्कम काढली आहे.'
-PG_DEBTCHOICE_LOANSUM_LESS_ERROR = 'तुम्ही रुपये १०,०० पेक्षा कमी रक्कम काढली आहे. '
+PG_DEBTCHOICE_LOANSUM_GREAT_ERROR = 'तुम्ही {} रुपयांपेक्षा जास्त रक्कम काढली आहे.'
+PG_DEBTCHOICE_LOANSUM_LESS_ERROR = 'तुम्ही रुपये {} पेक्षा कमी रक्कम काढली आहे. '
 
 PG_DEBTCHOICE_LESS_SAVINGS_ERROR = 'आपले बचत खर्चपेक्षा कमी आहेत.आपण कर्ज घेणे आवश्यक आहे.'
 
@@ -29,5 +34,3 @@
 EMI_1_LABEL = 'तुमच्या पहिल्या कर्जाची ईएमआय {} आहे'
 EMI_2_LABEL = 'तुमच्या दुसर्‍या कर्जाची ईएमआय {} आहे'
 EMI_3_LABEL = 'तुमच्या तिसर्‍या कर्जाची ईएमआय {} आहे'
-
-
Index: oTree_exp/savings_expense_game/templates/savings_expense_game/DebtChoicePage.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"global/Page.html\" %}\r\n{% load otree %}\r\n\r\n\r\n{% block title %}\r\n    Saving and expense ( फेरी क्रमांक - {{ subsession.round_number }})\r\n{% endblock %}\r\n\r\n{% block content %}\r\n\r\n    <p>\r\n        आपत्कालीन परिस्थितीसाठी आपल्याला रुपये {{ emergedFund }} खर्च करण्याची आवश्यकता आहे. आपण कोणता पर्याय निवडला आहे?\r\n    </p>\r\n\r\n    {% formfields %}\r\n    {% if subsession.round_number != 1 %}\r\n    <p>आतापर्यंत एकूण बचत - {{ participant.vars.totalSavings }}</p>\r\n    {% endif %}\r\n    {% next_button %}\r\n\r\n{% endblock %}\r\n\r\n{% block app_scripts %}\r\n    {% if fromTotalSavingChoice %}\r\n    <script>\r\n    // script to hide form fields depend on choices from radio button\r\n    $('input[name=\"debtChoice\"]').on(\"click\", function(e) {\r\n       console.log('JavaScript is executing');\r\n       let selected = $(\"input[name='debtChoice']:checked\").val();\r\n       console.log(selected);\r\n       if (selected === '{{ fromTotalSavingChoice }}'){\r\n           $('label[for=\"id_fromSavingAmt\"]').hide();\r\n           $('input[name=\"fromSavingAmt\"]').hide();\r\n\r\n           $('label[for=\"id_fromLoanAmount\"]').hide();\r\n           $('input[name=\"fromLoanAmount\"]').hide();\r\n       }else{\r\n           $('label[for=\"id_fromSavingAmt\"]').show();\r\n           $('input[name=\"fromSavingAmt\"]').show();\r\n\r\n           $('label[for=\"id_fromLoanAmount\"]').show();\r\n           $('input[name=\"fromLoanAmount\"]').show();\r\n       }\r\n    })\r\n    </script>\r\n    {% endif %}\r\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- oTree_exp/savings_expense_game/templates/savings_expense_game/DebtChoicePage.html	(revision 068291db5174be924ff1e6f8d18612373afd45e0)
+++ oTree_exp/savings_expense_game/templates/savings_expense_game/DebtChoicePage.html	(date 1603004462260)
@@ -21,27 +21,28 @@
 {% endblock %}
 
 {% block app_scripts %}
-    {% if fromTotalSavingChoice %}
     <script>
-    // script to hide form fields depend on choices from radio button
-    $('input[name="debtChoice"]').on("click", function(e) {
-       console.log('JavaScript is executing');
-       let selected = $("input[name='debtChoice']:checked").val();
-       console.log(selected);
-       if (selected === '{{ fromTotalSavingChoice }}'){
-           $('label[for="id_fromSavingAmt"]').hide();
-           $('input[name="fromSavingAmt"]').hide();
+        const hideLoanInput = function () {
+            $('label[for="id_fromSavingAmt"]').hide();
+            $('input[name="fromSavingAmt"]').hide();
 
-           $('label[for="id_fromLoanAmount"]').hide();
-           $('input[name="fromLoanAmount"]').hide();
-       }else{
-           $('label[for="id_fromSavingAmt"]').show();
-           $('input[name="fromSavingAmt"]').show();
+            $('label[for="id_fromLoanAmount"]').hide();
+            $('input[name="fromLoanAmount"]').hide();
+        };
+        const showLoanInput = function () {
+            $('label[for="id_fromSavingAmt"]').show();
+            $('input[name="fromSavingAmt"]').show();
 
-           $('label[for="id_fromLoanAmount"]').show();
-           $('input[name="fromLoanAmount"]').show();
-       }
+            $('label[for="id_fromLoanAmount"]').show();
+            $('input[name="fromLoanAmount"]').show();
+        };
+
+        // script to hide form fields depend on choices from radio button
+    $('input[name="debtChoice"]').on("click", function(e) {
+       console.log('JavaScript is executing');
+       let selected = $("input[name='debtChoice']:checked").val();
+       console.log(selected);
+       (selected === '0') ? hideLoanInput() : showLoanInput();
     })
     </script>
-    {% endif %}
 {% endblock %}
\ No newline at end of file
Index: oTree_exp/savings_expense_game/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from otree.api import (\r\n    models,\r\n    widgets,\r\n    BaseConstants,\r\n    BaseSubsession,\r\n    BaseGroup,\r\n    BasePlayer,\r\n    Currency as c,\r\n    currency_range,\r\n    ExtraModel,\r\n)\r\n\r\nfrom .strings import *\r\n\r\nauthor = 'github/ameya-shahu'\r\n\r\ndoc = \"\"\"\r\nYour app description\r\n\"\"\"\r\n\r\n\r\nclass Constants(BaseConstants):\r\n    name_in_url = 'savings_expense_game'\r\n    players_per_group = None\r\n    num_rounds = 25\r\n\r\n    # define round at which emergency fund to shown\r\n    # with emergency func amount\r\n    emergedFund = {  # round : func\r\n        4: 10000,\r\n        12: 45000,\r\n        19: 10000\r\n    }\r\n\r\n    salaryFund = {\r\n        1: 10000, 2: 10000, 3: 10000, 4: 10000, 5: 10000,\r\n        6: 10000, 7: 10000, 8: 10000, 9: 10000, 10: 10000,\r\n        11: 10000, 12: 10000, 13: 10000, 14: 10000, 15: 10000,\r\n        16: 10000, 17: 10000, 18: 10000, 19: 10000, 20: 10000,\r\n        21: 10000, 22: 10000, 23: 10000, 24: 10000, 25: 10000,\r\n    }\r\n\r\n\r\nclass Subsession(BaseSubsession):\r\n    def creating_session(self):\r\n        for p in self.get_players():\r\n            p.participant.vars['totalSavings'] = 0\r\n            p.participant.vars['debts'] = list()\r\n            p.participant.vars['totalDebt'] = 0\r\n\r\n            p.participant.vars['debt_1_amount'] = 0\r\n            p.participant.vars['debt_2_amount'] = 0\r\n            p.participant.vars['debt_3_amount'] = 0\r\n\r\n            p.participant.vars['em'] = 0\r\n            p.participant.vars['debt_2_round'] = 0\r\n            p.participant.vars['debt_3_round'] = 0\r\n\r\n            p.participant.vars['emi_1'] = 0\r\n            p.participant.vars['emi_2'] = 0\r\n            p.participant.vars['emi_3'] = 0\r\n\r\n            p.participant.vars['savings_color'] = '#34ce57'\r\n\r\n\r\nclass Group(BaseGroup):\r\n    pass\r\n\r\n\r\nclass Player(BasePlayer):\r\n    # consumption variable\r\n    consumption = models.IntegerField(label=PLAYER_CONSUMP_LABEL)\r\n\r\n    # savings variable\r\n    savings = models.IntegerField(label=PLAYER_SAVING_LABEL)\r\n\r\n    debtChoice = models.StringField(\r\n        label=PLAYER_DEBTCHOICE_LABEL,\r\n        widget=widgets.RadioSelect,\r\n        choices=PLAYER_DEBTCHOICE_S,\r\n    )\r\n\r\n    fromSavingAmt = models.IntegerField(\r\n        label=PLAYER_FROM_AMT_LABEL,\r\n        blank=True\r\n    )\r\n\r\n    fromLoanAmount = models.IntegerField(\r\n        label=PLAYER_LOAN_AMT_LABEL,\r\n        blank=True\r\n    )\r\n\r\n    EMI1 = models.IntegerField(\r\n        blank=True\r\n    )\r\n\r\n    EMI2 = models.IntegerField(\r\n        blank=True\r\n    )\r\n\r\n    EMI3 = models.IntegerField(\r\n        blank=True\r\n    )\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- oTree_exp/savings_expense_game/models.py	(revision 068291db5174be924ff1e6f8d18612373afd45e0)
+++ oTree_exp/savings_expense_game/models.py	(date 1603004462361)
@@ -22,14 +22,32 @@
 class Constants(BaseConstants):
     name_in_url = 'savings_expense_game'
     players_per_group = None
-    num_rounds = 25
-
+    num_rounds = 10
+    reqConsumption = 6000
+    debtRound = [2, 4, 6]
     # define round at which emergency fund to shown
     # with emergency func amount
     emergedFund = {  # round : func
-        4: 10000,
-        12: 45000,
-        19: 10000
+        debtRound[0]: 10000,
+        debtRound[1]: 45000,
+        debtRound[2]: 10000
+    }
+    debtChoice = {
+        debtRound[0]: [
+            {'interest': 3, 'type': 'M', 'rounds': 8},
+            {'interest': 8, 'type': 'Y', 'rounds': 10},
+            {'interest': 10, 'type': 'Y', 'rounds': 8},
+        ],  # Y stands for yearly interest and M stands for monthly interest
+        debtRound[1]: [
+            {'interest': 10, 'type': 'Y', 'rounds': 10},
+            {'interest': 8, 'type': 'Y', 'rounds': 12},
+            {'interest': 3, 'type': 'M', 'rounds': 12},
+        ],
+        debtRound[2]: [
+            {'interest': 8, 'type': 'Y', 'rounds': 6},
+            {'interest': 3, 'type': 'M', 'rounds': 6},
+            {'interest': 10, 'type': 'Y', 'rounds': 3},
+        ],
     }
 
     salaryFund = {
@@ -52,7 +70,7 @@
             p.participant.vars['debt_2_amount'] = 0
             p.participant.vars['debt_3_amount'] = 0
 
-            p.participant.vars['em'] = 0
+            p.participant.vars['debt_1_round'] = 0
             p.participant.vars['debt_2_round'] = 0
             p.participant.vars['debt_3_round'] = 0
 
@@ -60,6 +78,10 @@
             p.participant.vars['emi_2'] = 0
             p.participant.vars['emi_3'] = 0
 
+            p.participant.vars['debt_1_limit'] = 3
+            p.participant.vars['debt_2_limit'] = 3
+            p.participant.vars['debt_3_limit'] = 3
+
             p.participant.vars['savings_color'] = '#34ce57'
 
 
@@ -77,7 +99,6 @@
     debtChoice = models.StringField(
         label=PLAYER_DEBTCHOICE_LABEL,
         widget=widgets.RadioSelect,
-        choices=PLAYER_DEBTCHOICE_S,
     )
 
     fromSavingAmt = models.IntegerField(
@@ -101,3 +122,18 @@
     EMI3 = models.IntegerField(
         blank=True
     )
+
+    def debtChoice_choices(self):
+        debtOpt = Constants.debtChoice[self.round_number]
+
+        choices = [
+            [0, PLAYER_DEBTCHOICE_S[0]],
+        ]
+
+        for i, opt in enumerate(debtOpt):
+            choice = [i + 1, PLAYER_DEBTCHOICE_S[1].format(opt["interest"], "Month" if opt["type"] == "M" else "Year",
+                                                           opt["rounds"])]
+            # choice = f'{opt["interest"]}% per {"Month" if opt["type"] == "M" else "Year"}, paid over {opt["rounds"]} rounds'
+            choices.append(choice)
+
+        return choices
Index: oTree_exp/depression_optimism_scale_hindi/templates/depression_optimism_scale_hindi/MyPage.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- oTree_exp/depression_optimism_scale_hindi/templates/depression_optimism_scale_hindi/MyPage.html	(date 1603004561183)
+++ oTree_exp/depression_optimism_scale_hindi/templates/depression_optimism_scale_hindi/MyPage.html	(date 1603004561183)
@@ -0,0 +1,17 @@
+{% extends "global/Page.html" %}
+{% load otree %}
+
+{% block title %}
+    औदासिन्य और आशावाद सर्वेक्षण
+{% endblock %}
+
+{% block content %}
+    <p>
+        निम्नलिखित प्रश्नो के उत्तर दो
+    </p>
+
+    {% formfields %}
+
+    {% next_button %}
+
+{% endblock %}
Index: oTree_exp/savings_expense_game/templates/savings_expense_game/MyPage.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"global/Page.html\" %}\r\n{% load humanize %}\r\n{% load otree %}\r\n\r\n\r\n{% block title %}\r\n    Saving and expense ( फेरी क्रमांक - {{ subsession.round_number }})\r\n{% endblock %}\r\n\r\n{% block global_styles  %}\r\n    <style>\r\n         .table-info, .table-info>td, .table-info>th {\r\n            color: #fff;\r\n            background-color: #007bff;\r\n            border-color: #007bff;\r\n             font-weight: normal;\r\n        }\r\n         .card-text{\r\n             color: {{ participant.vars.savings_color }};\r\n             font-size: x-large;\r\n         }\r\n    </style>\r\n{% endblock %}\r\n\r\n\r\n{% block content %}\r\n\r\n    <p>\r\n        तुम्हाला {{ roundSalary | intcomma }} रुपये मिळाले, तुम्ही किती खर्च कराल आणि किती बचत कराल?\r\n    </p>\r\n\r\n    {% formfields %}\r\n    {% next_button %}\r\n\r\n\r\n    {% if subsession.round_number != 1 %}\r\n        <div class=\"card text-center w-25\">\r\n            <div class=\"card-body\">\r\n                <h5 class=\"card-title\"><b>आतापर्यंत एकूण बचत</b></h5>\r\n                <p class=\"card-text\"> <b>रुपये {{ participant.vars.totalSavings | intcomma }}</b></p>\r\n            </div>\r\n        </div>\r\n    {% endif %}\r\n    <br>\r\n    {% if participant.vars.emi_1 > 0 %}\r\n    <div>\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr class = \"table-info\">\r\n              <th scope=\"col\">कर्ज क्रमांक</th>\r\n              <th scope=\"col\">शिल्लक रक्कम</th>\r\n              <th scope=\"col\">फेरीनुसार परत करण्यायोग्य रक्कम</th>\r\n              <th scope=\"col\">उर्वरित कर्जाच्या फे्या</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">1</th>\r\n              <td>{{ participant.vars.debt_1_amount | intcomma }}</td>\r\n              <td>{{ participant.vars.emi_1 }}</td>\r\n              <td>{{ participant.vars.debt_1_round }}</td>\r\n            </tr>\r\n            {% if participant.vars.emi_2 > 0 %}\r\n                <tr>\r\n                  <th scope=\"row\">2</th>\r\n                  <td>{{ participant.vars.debt_2_amount | intcomma }}</td>\r\n                  <td>{{ participant.vars.emi_2 }}</td>\r\n                  <td>{{ participant.vars.debt_2_round }}</td>\r\n                </tr>\r\n            {% endif %}\r\n\r\n            {% if participant.vars.emi_3 > 0 %}\r\n                <tr>\r\n                  <th scope=\"row\">3</th>\r\n                  <td>{{ participant.vars.debt_3_amount | intcomma }}</td>\r\n                  <td>{{ participant.vars.emi_3 }}</td>\r\n                  <td>{{ participant.vars.debt_3_round }}</td>\r\n                </tr>\r\n            {% endif %}\r\n          </tbody>\r\n    </table>\r\n    </div>\r\n    {% endif %}\r\n{% endblock %}\r\n\r\n{% block app_scripts %}\r\n    <script>\r\n        $(document).ready(function (){\r\n            $('label[for=\"id_EMI1\"]').html('पहिल्या कर्जाची ईएमआय रुपये {{ participant.vars.emi_1 | intcomma }} :');\r\n            $('label[for=\"id_EMI2\"]').html('तुमच्या दुसर्\u200Dया कर्जाची ईएमआय रुपये {{ participant.vars.emi_2 | intcomma}} :');\r\n            $('label[for=\"id_EMI3\"]').html('तुमच्या तिसर्\u200Dया कर्जाची ईएमआय रुपये {{ participant.vars.emi_3 | intcomma}} :');\r\n        });\r\n    </script>\r\n{% endblock %}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- oTree_exp/savings_expense_game/templates/savings_expense_game/MyPage.html	(revision 068291db5174be924ff1e6f8d18612373afd45e0)
+++ oTree_exp/savings_expense_game/templates/savings_expense_game/MyPage.html	(date 1603004462435)
@@ -9,6 +9,9 @@
 
 {% block global_styles  %}
     <style>
+        .otree-body {
+            max-width:2000px;
+        }
          .table-info, .table-info>td, .table-info>th {
             color: #fff;
             background-color: #007bff;
@@ -25,64 +28,75 @@
 
 {% block content %}
 
-    <p>
-        तुम्हाला {{ roundSalary | intcomma }} रुपये मिळाले, तुम्ही किती खर्च कराल आणि किती बचत कराल?
-    </p>
+        <div class="row mb-4">
+            <div class="col">
+                <p>
+                    तुम्हाला {{ roundSalary | intcomma }} रुपये मिळाले, तुम्ही किती खर्च कराल आणि किती बचत कराल?
+                </p>
 
-    {% formfields %}
-    {% next_button %}
+                {% formfields %}
+                {% next_button %}
 
-
-    {% if subsession.round_number != 1 %}
-        <div class="card text-center w-25">
-            <div class="card-body">
-                <h5 class="card-title"><b>आतापर्यंत एकूण बचत</b></h5>
-                <p class="card-text"> <b>रुपये {{ participant.vars.totalSavings | intcomma }}</b></p>
-            </div>
-        </div>
-    {% endif %}
-    <br>
-    {% if participant.vars.emi_1 > 0 %}
-    <div>
-        <table class="table">
-          <thead>
-            <tr class = "table-info">
-              <th scope="col">कर्ज क्रमांक</th>
-              <th scope="col">शिल्लक रक्कम</th>
-              <th scope="col">फेरीनुसार परत करण्यायोग्य रक्कम</th>
-              <th scope="col">उर्वरित कर्जाच्या फे्या</th>
-            </tr>
-          </thead>
-          <tbody>
-            <tr>
-              <th scope="row">1</th>
-              <td>{{ participant.vars.debt_1_amount | intcomma }}</td>
-              <td>{{ participant.vars.emi_1 }}</td>
-              <td>{{ participant.vars.debt_1_round }}</td>
-            </tr>
-            {% if participant.vars.emi_2 > 0 %}
-                <tr>
-                  <th scope="row">2</th>
-                  <td>{{ participant.vars.debt_2_amount | intcomma }}</td>
-                  <td>{{ participant.vars.emi_2 }}</td>
-                  <td>{{ participant.vars.debt_2_round }}</td>
-                </tr>
-            {% endif %}
+                {% if subsession.round_number != 1 %}
+                    <div class="card text-center w-50">
+                        <div class="card-body">
+                            <h5 class="card-title"><b>आतापर्यंत एकूण बचत</b></h5>
+                            <p class="card-text"> <b>रुपये {{ participant.vars.totalSavings | intcomma }}</b></p>
+                        </div>
+                    </div>
+                {% endif %}
+            </div>
+            <div class="col mt-4">
+                {% include "global/calculator.html" %}
+            </div>
+        </div>
+        <div class="row mb-4">
+            <div class="col-md-auto mt-4">
+                {% if participant.vars.emi_1 > 0 %}
+                    <div>
+                        <table class="table">
+                          <thead>
+                            <tr class = "table-info">
+                              <th scope="col">कर्ज क्रमांक</th>
+                              <th scope="col">शिल्लक रक्कम</th>
+                              <th scope="col">फेरीनुसार परत करण्यायोग्य रक्कम</th>
+                              <th scope="col">उर्वरित कर्जाच्या फे्या</th>
+                            </tr>
+                          </thead>
+                          <tbody>
+                            <tr>
+                              <th scope="row">1</th>
+                              <td>{{ participant.vars.debt_1_amount | intcomma }}</td>
+                              <td>{{ participant.vars.emi_1 }}</td>
+                              <td>{{ participant.vars.debt_1_round }}</td>
+                            </tr>
+                            {% if participant.vars.emi_2 > 0 %}
+                                <tr>
+                                  <th scope="row">2</th>
+                                  <td>{{ participant.vars.debt_2_amount | intcomma }}</td>
+                                  <td>{{ participant.vars.emi_2 }}</td>
+                                  <td>{{ participant.vars.debt_2_round }}</td>
+                                </tr>
+                            {% endif %}
 
-            {% if participant.vars.emi_3 > 0 %}
-                <tr>
-                  <th scope="row">3</th>
-                  <td>{{ participant.vars.debt_3_amount | intcomma }}</td>
-                  <td>{{ participant.vars.emi_3 }}</td>
-                  <td>{{ participant.vars.debt_3_round }}</td>
-                </tr>
-            {% endif %}
-          </tbody>
-    </table>
-    </div>
-    {% endif %}
+                            {% if participant.vars.emi_3 > 0 %}
+                                <tr>
+                                  <th scope="row">3</th>
+                                  <td>{{ participant.vars.debt_3_amount | intcomma }}</td>
+                                  <td>{{ participant.vars.emi_3 }}</td>
+                                  <td>{{ participant.vars.debt_3_round }}</td>
+                                </tr>
+                            {% endif %}
+                          </tbody>
+                    </table>
+                    </div>
+                {% endif %}
+            </div>
+        </div>
+
 {% endblock %}
 
+
 {% block app_scripts %}
     <script>
         $(document).ready(function (){
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_14-Oct-20_11_31__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_14-Oct-20_11_31__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_15-Oct-20_23_01__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_15-Oct-20_23_01__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_15-10-2020_11_05_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_15-10-2020_11_05_PM__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_17-Oct-20_16_00__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_17-Oct-20_16_00__Default_Changelist_.xml
